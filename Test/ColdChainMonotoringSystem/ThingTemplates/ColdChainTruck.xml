<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingTemplates>
        <ThingTemplate
         baseThingTemplate="GenericThing"
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         homeMashup=""
         name="ColdChainTruck"
         projectName="ColdChainMonotoringSystem"
         tags=""
         thingPackage=""
         valueStream="TemplateVS">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="ColdChainORG"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="ActiveTrucks"></AlertDefinitions>
                <AlertDefinitions
                 name="ActivityStatus"></AlertDefinitions>
                <AlertDefinitions
                 name="Destination"></AlertDefinitions>
                <AlertDefinitions
                 name="ETA"></AlertDefinitions>
                <AlertDefinitions
                 name="GasAlert"></AlertDefinitions>
                <AlertDefinitions
                 name="GasLevel"></AlertDefinitions>
                <AlertDefinitions
                 name="HealthCheck"></AlertDefinitions>
                <AlertDefinitions
                 name="HealthStatus"></AlertDefinitions>
                <AlertDefinitions
                 name="Humidity"></AlertDefinitions>
                <AlertDefinitions
                 name="HumidityAlert"></AlertDefinitions>
                <AlertDefinitions
                 name="InactiveTrucks"></AlertDefinitions>
                <AlertDefinitions
                 name="location"></AlertDefinitions>
                <AlertDefinitions
                 name="MFName"></AlertDefinitions>
                <AlertDefinitions
                 name="ModelName"></AlertDefinitions>
                <AlertDefinitions
                 name="Name"></AlertDefinitions>
                <AlertDefinitions
                 name="NumberOfTrucksWithHumidityIssues"></AlertDefinitions>
                <AlertDefinitions
                 name="NumberOfTrucksWithTemperatureIssues"></AlertDefinitions>
                <AlertDefinitions
                 name="Source"></AlertDefinitions>
                <AlertDefinitions
                 name="TempAlert"></AlertDefinitions>
                <AlertDefinitions
                 name="Temperature"></AlertDefinitions>
                <AlertDefinitions
                 name="TransitStatus"></AlertDefinitions>
                <AlertDefinitions
                 name="TransitTrucks"></AlertDefinitions>
                <AlertDefinitions
                 name="Voltage"></AlertDefinitions>
                <AlertDefinitions
                 name="VoltageAlert"></AlertDefinitions>
            </AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="ActiveTrucks"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="BOOLEAN"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="ActivityStatus"
                     ordinal="20"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Destination"
                     ordinal="22"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="DATETIME"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="ETA"
                     ordinal="23"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="GasAlert"
                     ordinal="21"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     aspect.units="%"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="GasLevel"
                     ordinal="13"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="4.0"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="HealthCheck"
                     ordinal="19"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="True"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="HealthStatus"
                     ordinal="14"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Humidity"
                     ordinal="11"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="HumidityAlert"
                     ordinal="19"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="0.0"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="InactiveTrucks"
                     ordinal="4"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="location"
                     ordinal="9"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="MFName"
                     ordinal="25"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="ModelName"
                     ordinal="24"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Name"
                     ordinal="2"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="False"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description="True if Truck has an Issue else False"
                     isLocalOnly="false"
                     name="NumberOfTrucksWithHumidityIssues"
                     ordinal="8"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="False"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="NumberOfTrucksWithTemperatureIssues"
                     ordinal="7"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Source"
                     ordinal="21"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="TempAlert"
                     ordinal="18"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     aspect.units=""
                     baseType="INTEGER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Temperature"
                     ordinal="10"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.defaultValue="True"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="TransitStatus"
                     ordinal="17"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     aspect.isReadOnly="false"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="TransitTrucks"
                     ordinal="6"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     aspect.units="V"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Voltage"
                     ordinal="12"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="VoltageAlert"
                     ordinal="20"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="infotablemaker">
                        <ResultType
                         aspect.dataShape="Sample"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="infotablemaker">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                        	infoTableName: Tempest /* STRING */
                                        };
                                        
                                        // result: INFOTABLE
                                        var result = Resources["InfoTableFunctions"].CreateInfoTable(params);
                                        
                                        
                                        
                                        var PrinterList = me.Tempest;
                                        
                                        var PrinterName = me.Temperature;
                                        
                                        for (var i = 0; i < PrinterList.rows.length; i++) {
                                        
                                            var row = PrinterList.rows;
                                        
                                         
                                        
                                            if (row.PrinterName == PrinterName) {
                                        
                                                PrinterList.rows.PrinterDescription = "PrinterDescription";
                                        
                                                PrinterList.rows.PrinterEnabled = true;
                                        
                                          }
                                        
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="GasOverFlow"
                     source=""
                     sourceProperty="GasLevel"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="GasOverFlow">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.GasLevel == 100)
                                            {
                                            
                                                me.GasAlert = " ";
                                                 if(me.HealthCheck <4)
                                                {
                                                    me.HealthCheck++;
                                                }
                                                
                                            }
                                            else
                                            {
                                                me.GasAlert = "Gas Level is Abnormal";
                                                
                                                me.HealthStatus = "False";
                                                if(me.HealthCheck >0)
                                                {
                                                    me.HealthCheck--;
                                                }
                                                Things["InactiveTrucks"].AlertID++;
                                                
                                                
                                                var tags = new Array();
                                                var alert = me.GasAlert;
                                                var name = me.Name;
                                                var ID = Things["InactiveTrucks"].AlertID;
                                                var rem ="Please Call 1800-258-2345";
                                                
                                                
                                            var values =  Things["ColdChainDataTable"].CreateValues();
                                                values.Alert = alert;
                                                values.ID = ID;
                                                values.Name= name;
                                                values.Remedies = rem;
                                                
                                                
                                              var params = {
                                                  tags : tags,
                                                  source : me.name,
                                                  values : values
                                              };
                                                
                                               // id: STRING
                                            var id =  Things["ColdChainDataTable"].AddOrUpdateDataTableEntry(params);
                                            
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="HealthChecker"
                     source=""
                     sourceProperty="HealthCheck"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="HealthChecker">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.HealthCheck == 4)
                                            {
                                                me.HealthStatus = "True";
                                                me.ActivityStatus=1;
                                            }
                                            else
                                            {
                                                me.HealthStatus="False";
                                                me.ActivityStatus=0;
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="HumidIssues"
                     source=""
                     sourceProperty="NumberOfTrucksWithHumidityIssues"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="HumidIssues">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.NumberOfTrucksWithHumidityIssues == "True")
                                            {
                                                
                                                Things["InactiveTrucks"].NoOfTrucksHumidissues++;
                                            }
                                            else if(me.NumberOfTrucksWithHumidityIssues == "False")
                                            {
                                                Things["InactiveTrucks"].NoOfTrucksHumidissues--;
                                                
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="HumidOverFlow"
                     source=""
                     sourceProperty="Humidity"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="HumidOverFlow">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.Humidity == 100)
                                            {
                                            me.NumberOfTrucksWithHumidityIssues = "False";
                                                me.HumidityAlert = " ";
                                                if(me.HealthCheck <4)
                                                {
                                                    me.HealthCheck++;
                                                }
                                                
                                            }
                                            else
                                            {
                                                me.NumberOfTrucksWithHumidityIssues = "True";
                                                me.HumidityAlert = "Humidity is Abnormal";
                                               
                                                Things["InactiveTrucks"].AlertID++;
                                                if(me.HealthCheck >0)
                                                {
                                                me.HealthCheck--;
                                                }
                                                
                                                
                                                var tags = new Array();
                                                var alert = me.HumidityAlert;
                                                var name = me.Name;
                                                var ID = Things["InactiveTrucks"].AlertID;
                                                var rem = "Please call Maintenance Team (1800-508-2345)";
                                                
                                            var values =  Things["ColdChainDataTable"].CreateValues();
                                                values.Alert = alert;
                                                values.ID = ID;
                                                values.Name= name;
                                                values.Remedies = rem;
                                                
                                                
                                              var params = {
                                                  tags : tags,
                                                  source : me.name,
                                                  values : values
                                              };
                                                
                                               // id: STRING
                                            var id =  Things["ColdChainDataTable"].AddOrUpdateDataTableEntry(params);
                                            
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="Inactivity"
                     source=""
                     sourceProperty="HealthStatus"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Inactivity">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.HealthStatus == "False")
                                            {
                                                if(Things["InactiveTrucks"].InactiveTrucksCount < 4)
                                                {
                                                Things["InactiveTrucks"].InactiveTrucksCount++;
                                                }
                                               
                                            }
                                            else if(me.HealthStatus == "True")
                                            {
                                                if(Things["InactiveTrucks"].InactiveTrucksCount > 0)
                                                {
                                                Things["InactiveTrucks"].InactiveTrucksCount--;
                                                }
                                                
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="Intransit"
                     source=""
                     sourceProperty="TransitStatus"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Intransit">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.TransitStatus == "False")
                                            {
                                             Things["InactiveTrucks"].TransitTrucks--;
                                            }
                                            else if(me.TransitStatus == "True")
                                            {
                                            Things["InactiveTrucks"].TransitTrucks++;
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="Tempissues"
                     source=""
                     sourceProperty="NumberOfTrucksWithTemperatureIssues"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Tempissues">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.NumberOfTrucksWithTemperatureIssues == "True")
                                            {
                                                Things["InactiveTrucks"].NoOfTrucksTempissues++;
                                            }
                                            else if(me.NumberOfTrucksWithTemperatureIssues == "False")
                                            {
                                            Things["InactiveTrucks"].NoOfTrucksTempissues--;
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="TempOverFlow"
                     source=""
                     sourceProperty="Temperature"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="TempOverFlow">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if(me.Temperature <= 0 && me.Temperature >= (-20))
                                            {
                                                me.NumberOfTrucksWithTemperatureIssues = "False";
                                                me.TempAlert = " ";
                                                 if(me.HealthCheck <4)
                                                {
                                                    me.HealthCheck++;
                                                }
                                            }
                                            else {
                                                me.NumberOfTrucksWithTemperatureIssues = "True";
                                                me.TempAlert = "Temperature is Abnormal";
                                                
                                                if(me.HealthCheck > 0)
                                                {
                                                me.HealthCheck--;
                                                }
                                                Things["InactiveTrucks"].AlertID++;
                                                
                                                var tags = new Array();
                                                var alert = me.TempAlert;
                                                var name = me.Name;
                                                var ID = Things["InactiveTrucks"].AlertID;
                                                var rem = "Please Call Maintenance team (1800-508-2345)";
                                                
                                            var values =  Things["ColdChainDataTable"].CreateValues();
                                                values.Alert = alert;
                                                values.ID = ID;
                                                values.Name= name;
                                                values.Remedies = rem;
                                                
                                                
                                              var params = {
                                                  tags : tags,
                                                  source : me.name,
                                                  values : values
                                              };
                                                
                                               // id: STRING
                                            var id =  Things["ColdChainDataTable"].AddOrUpdateDataTableEntry(params);
                                            
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="VoltageOverflow"
                     source=""
                     sourceProperty="Voltage"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="VoltageOverflow">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            var m;
                                            var n;
                                            n =5;
                                            
                                            if(me.Voltage <= 240 && me.Voltage >=200)
                                            {
                                              
                                                me.VoltageAlert =" ";
                                                if(me.HealthCheck <4)
                                                {
                                                    me.HealthCheck++;
                                                }
                                            }
                                            else
                                            {
                                                me.VoltageAlert =" Voltage Level Is Abnormal";  
                                                if(me.HealthCheck >0)
                                                {
                                                    me.HealthCheck--;
                                                }
                                                
                                                me.HealthCheck = me.HealthCheck - 1;
                                                Things["InactiveTrucks"].AlertID++;
                                                
                                                
                                                var tags = new Array();
                                                var alert = me.VoltageAlert;
                                                var name = me.Name;
                                                var ID = Things["InactiveTrucks"].AlertID;
                                                var rem = "Backup Source will Keep You running for 2 Hours";
                                                
                                            var values =  Things["ColdChainDataTable"].CreateValues();
                                                values.Alert = alert;
                                                values.ID = ID;
                                                values.Name= name;
                                                values.Remedies = rem;
                                                
                                                
                                              var params = {
                                                  tags : tags,
                                                  source : me.name,
                                                  values : values
                                              };
                                                
                                               // id: STRING
                                            var id =  Things["ColdChainDataTable"].AddOrUpdateDataTableEntry(params);
                                            
                                             
                                            
                                            
                                            
                                                
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <ImplementedShapes></ImplementedShapes>
            <SharedConfigurationTables></SharedConfigurationTables>
            <InstanceDesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility></Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
