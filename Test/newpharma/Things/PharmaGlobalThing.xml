<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         name="PharmaGlobalThing"
         projectName="newpharma"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetPharmaLocation">
                        <ResultType
                         aspect.dataShape="PlantLocation"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="NewPharmaKPIData">
                        <ResultType
                         aspect.dataShape="PharmaKPIdata"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetPharmaLocation">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                            infoTableName : "InfoTable",
                                            dataShapeName : "PlantLocation"
                                        };
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PharmaDS)
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        
                                        var latparams={
                                            propertyName: "Latitude"
                                        };
                                        var longparams={
                                            propertyName: "Longitude"
                                        };
                                        var nameparams={
                                            propertyName: "PlantName"
                                        };
                                        // result: INFOTABLE dataShape: "RootEntityList"
                                        var myThings =  ThingTemplates["NewPharmaPlant"].GetImplementingThingsWithData();
                                        
                                        for(var i=0; i<myThings.getRowCount(); i++)
                                        {
                                            var plantThing= Things[myThings.rows[i].name];
                                            // PharmaDS entry object
                                        var newEntry = new Object();
                                        newEntry.PlantName = plantThing.GetStringPropertyValue(nameparams); // STRING
                                        newEntry.Latitude = plantThing.GetNumberPropertyValue(latparams); // NUMBER
                                        newEntry.Longitude = plantThing.GetNumberPropertyValue(longparams); // NUMBER
                                        result.AddRow(newEntry);
                                        
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="NewPharmaKPIData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                            infoTableName : "InfoTable",
                                            dataShapeName : "PharmaKPIdata"
                                        };
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(KPIdatashape)
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        
                                        var yldparams={
                                        propertyName: "Yield"
                                        };
                                        var wstparams={
                                        propertyName: "Wastage"
                                        };
                                        var cptyparams={
                                        propertyName: "CapacityUtilization"
                                        };
                                        var qltyparams={
                                        propertyName: "QualityCost"
                                        };
                                        var mnfparams={
                                        propertyName: "ManufacturingCost"
                                        };
                                        var ordparams={
                                        propertyName: "OrderCycleTime"
                                        };
                                        var acdparams={
                                        propertyName: "AccidentLostTime"
                                        };
                                        var nameparams={
                                        propertyName: "PlantName"
                                        };
                                        
                                        // result: INFOTABLE dataShape: "RootEntityList"
                                        var myThings =  ThingTemplates["NewPharmaPlant"].GetImplementingThingsWithData();
                                        
                                        for(var i=0 ; i<myThings.getRowCount();i++)
                                        {
                                            var plantThing= Things[myThings.rows[i].name];
                                            // KPIdatashape entry object
                                        var newEntry = new Object();
                                        newEntry.Yield = plantThing.GetNumberPropertyValue(yldparams); // NUMBER
                                        newEntry.Wastage = plantThing.GetNumberPropertyValue(wstparams); // NUMBER
                                        newEntry.CapacityUtilization = plantThing.GetNumberPropertyValue(cptyparams); // NUMBER
                                        newEntry.QualityCost = plantThing.GetNumberPropertyValue(qltyparams); // NUMBER
                                        newEntry.ManufacturingCost = plantThing.GetNumberPropertyValue(mnfparams); // NUMBER
                                        newEntry.OrderCycleTime = plantThing.GetNumberPropertyValue(ordparams); // NUMBER
                                        newEntry.AccidentLostTime = plantThing.GetNumberPropertyValue(acdparams); // NUMBER
                                        newEntry.PlantName = plantThing.GetStringPropertyValue(nameparams); // STRING
                                        result.AddRow(newEntry);
                                        
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
